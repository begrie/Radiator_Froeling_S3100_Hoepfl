#!  /usr/bin/env python
# -*- coding: UTF-8 -*-

import os
import sys
import re
import time
import urllib
import urllib2
from email import utils
from datetime import datetime

if len(sys.argv) != 2:
   sys.stderr.write(sys.argv[0] + " <VU hostname>")
   sys.stderr.write("Use '-' as hostname to disable the script.")
   sys.stderr.write("\n")
   sys.exit(1)

VU_SERVER=sys.argv[1]

if len(VU_SERVER) == 0 or VU_SERVER == "-":
   sys.stdout.write("VU server set to '-', disabled.\n")
   sys.stdout.flush()
   while True:
      line = sys.stdin.readline()
      if not line: break # EOF
   sys.exit(0)

timestampRE = re.compile(r"^\[TIME\] [A-Za-z]*, ([-0-9]*), ([:0-9]*)")
errorRE = re.compile(r"^\[ERROR\] (..., ....-..-.., ..:..:..): (.*)")
valueCleanupRE = re.compile(r"[^-0-9.]*")
valueRE = re.compile(r"^\[VALUE\] 0*([0-9]+) \[([^]]*)\] = \[([^]]*)] \[(.)\] \(([-0-9]*)\)")

def send_error_message(error_time, error_description):
   text = u"Die Heizung hat eine St√∂rung gemeldet!" + \
          "\n" + \
          "\n   Uhrzeit: " + error_time + \
          "\n   Meldung: " + error_description

   now = utils.formatdate(time.mktime(datetime.now().timetuple()))
   try:
      query = urllib.urlencode({ "text": text.encode('utf-8'), "type": "3", "timeout": "" })
      contents = urllib2.urlopen("http://{0}/web/message?{1}".format(VU_SERVER, query)).read()
      sys.stdout.write("{0}: Sent message to VU @{1}: \n".format(now, VU_SERVER))
      sys.stdout.write(contents)
      sys.stdout.flush()
   except Exception as error:
      sys.stdout.write("{0}: Sent message to VU @{1}: FAILED ({2})\n".format(now, VU_SERVER, error))
      sys.stdout.flush()

def send_off_message(off_duration):
   off_hours = int(off_duration / 3600)
   text = "Die Heizung ist seit mehr als %d Stunde(n) ausgeschaltet!\n" % (off_hours) + \
           "\n" + \
           "\nUhrzeit: " + utils.formatdate(time.mktime(datetime.now().timetuple()))

   now = utils.formatdate(time.mktime(datetime.now().timetuple()))
   try:
      query = urllib.urlencode({ "text": text.encode('utf-8'), "type": "3", "timeout": "" })
      contents = urllib2.urlopen("http://{0}/web/message?{1}".format(VU_SERVER, query)).read()
      sys.stdout.write("{0}: Sent message to VU @{1}: \n".format(now, VU_SERVER))
      sys.stdout.write(contents)
      sys.stdout.flush()
   except Exception as error:
      sys.stdout.write("{0}: Sent message to VU @{1}: FAILED ({2})\n".format(now, VU_SERVER, error))
      sys.stdout.flush()

timestamp = None

state = 0
turned_off = None
off_send_distance = 3600
while True:
   line = sys.stdin.readline()
   if not line: break # EOF
   try:
      line = line.decode('utf-8')
   except:
      sys.stdout.write("Failed to UTF-8-decode line <")
      sys.stdout.write(line)
      sys.stdout.write(">\n")
      sys.stdout.flush()
      line = ""

   timestamp_match = timestampRE.match(line)
   if timestamp_match:
      timestamp=timestamp_match.group(1) + " " + timestamp_match.group(2)

   error_match = errorRE.match(line)
   if error_match:
      send_error_message(error_match.group(1), error_match.group(2))

   if timestamp:
      value_match=valueRE.match(line)
      if value_match:
         key=int(value_match.group(1))
         if key == 0:
            state = value_match.group(5)

      if len(line) == 1:
         # Check for radiator being turned off.
         if int(state) == 6:
            # Radiator is off.

            if not turned_off:
               turned_off = datetime.now()
               off_send_distance = 3600
            else:
               # Off for 1 or more hours
               off_duration=(datetime.now() - turned_off).total_seconds()
               if off_duration > off_send_distance:
                  send_off_message(off_send_distance)
                  off_send_distance *= 2
         else:
            # Radiator is on
            turned_off = None

         state = 0

