#!  /bin/bash

SCRIPT_HOME="$(dirname "$0")"
[ -e "$SCRIPT_HOME/radiator.conf" ] && source "$SCRIPT_HOME/radiator.conf"
[ -e "@sysconfdir@/radiator.conf" ] && source "@sysconfdir@/radiator.conf"
[ -e "$HOME/.radiatorrc" ] && source "$HOME/.radiatorrc"

if [ -z "$RRD" ] ; then
   exec >&2
   echo "\$HOME/.radiatorrc,"
   echo "@sysconfdir@/radiator.conf,"
   echo "or $SCRIPT_HOME/radiator.conf"
   echo
   echo "must set"
   echo
   echo "   RRD"
   echo
   echo "See @docdir@/radiator.conf for an example."
   echo
   exit 1
fi

TIMESTAMP=""
while read X; do
   if [[ "$X" =~ ^\[TIME\]\ ([A-Za-z]*,)\ ([-0-9]*),\ ([:0-9]*) ]] ; then
      TIMESTAMP="${BASH_REMATCH[1]} ${BASH_REMATCH[2]} ${BASH_REMATCH[3]}"
      UNIX_TIME=$(date -d "$TIMESTAMP" +%s)
   fi

   if [ -n "$TIMESTAMP" ] ; then
      if [[ "$X" =~ ^\[VALUE\]\ 0*([0-9a-f]+)\ \[[^]]*\]\ =\ \[([^]]*)\]\ \[(.)\]\ \(([0-9]*)\) ]] ; then
         KEY="${BASH_REMATCH[1]}"
         VALUE="${BASH_REMATCH[2]}"
         TYPE="${BASH_REMATCH[3]}"
         NUMBER_VALUE="${BASH_REMATCH[4]}"

         if [ "$TYPE" = "N" ] ; then
            VALUES[$KEY]="${VALUE//[^-0-9.]*/}"
         else
            VALUES[$KEY]="$NUMBER_VALUE"
         fi
      fi

      if [[ "$X" =~ ^$ ]] ; then
         RRD_UPDATE=$(                 \
         echo -n "$UNIX_TIME";         \
         for i in {0..29}; do          \
            echo -n ":${VALUES[$i]}";  \
         done ) 
         rrdtool update "$RRD" "$RRD_UPDATE"

         unset VALUES
         TIMESTAMP=""
      fi
   fi
done
